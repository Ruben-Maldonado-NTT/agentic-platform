services:

  platform-api:
    build: ../services/platform-api
    container_name: platform-api
    restart: always
    env_file:
      - ../services/.env.docker
    ports:
      - "8200:8000"
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.platform-api.rule=Host(`platform-api.localhost`)"
      - "traefik.http.services.platform-api.loadbalancer.server.port=8000"

  scaffolding-service:
    build: ../services/scaffolding-service
    container_name: scaffolding-service
    restart: always
    env_file:
      - ../services/.env.docker
    ports:
      - "8201:8000"
    depends_on:
      - platform-api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.scaffolding-service.rule=Host(`scaffolding.localhost`)"
      - "traefik.http.services.scaffolding-service.loadbalancer.server.port=8000"

  agency-deployer:
    build: ../services/agency-deployer
    container_name: agency-deployer
    restart: always
    env_file:
      - ../services/.env.docker
    ports:
      - "8202:8000"
    depends_on:
      - platform-api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.agency-deployer.rule=Host(`deployer.localhost`)"
      - "traefik.http.services.agency-deployer.loadbalancer.server.port=8000"

  llm-facade:
    build: ../services/llm-facade
    container_name: llm-facade
    restart: always
    env_file:
      - ../services/.env.docker
    ports:
      - "8203:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.llm-facade.rule=Host(`llm.localhost`)"
      - "traefik.http.services.llm-facade.loadbalancer.server.port=8000"

  discovery-service:
    build: ../services/discovery-service
    container_name: discovery-service
    restart: always
    env_file:
      - ../services/.env.docker
    ports:
      - "8204:8000"
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.discovery-service.rule=Host(`discovery.localhost`)"
      - "traefik.http.services.discovery-service.loadbalancer.server.port=8000"

  mcp-registry:
    build: ../services/mcp-registry-service
    container_name: mcp-registry
    restart: always
    env_file:
      - ../services/.env.docker
    ports:
      - "8100:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mcp-registry.rule=Host(`mcps.localhost`)"
      - "traefik.http.services.mcp-registry.loadbalancer.server.port=8000"
    depends_on:
      - postgres

  mcp-executor-service:
    build: ../services/mcp-executor-service
    container_name: mcp-executor-service
    restart: always
    env_file:
      - ../services/.env.docker
    ports:
      - "8205:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mcp-executor.rule=Host(`mcp-executor.localhost`)"
      - "traefik.http.services.mcp-executor.loadbalancer.server.port=8000"

  runtime-controller:
    build: ../services/runtime-controller
    container_name: runtime-controller
    restart: always
    env_file:
      - ../services/.env.docker
    ports:
      - "8206:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.runtime-controller.rule=Host(`runtime.localhost`)"
      - "traefik.http.services.runtime-controller.loadbalancer.server.port=8000"

  agent-repo-generator:
    build: ../services/agent-repo-generator
    container_name: agent-repo-generator
    restart: always
    env_file:
      - ../services/.env.docker
    ports:
      - "8207:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.repo-generator.rule=Host(`repo.localhost`)"
      - "traefik.http.services.repo-generator.loadbalancer.server.port=8000"

  auth-service:
    build: ../services/auth-service
    container_name: auth-service
    restart: always
    env_file:
      - ../services/.env.docker
    ports:
      - "8208:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-service.rule=Host(`auth.localhost`)"
      - "traefik.http.services.auth-service.loadbalancer.server.port=8000"

  metrics-service:
    build: ../services/metrics-service
    container_name: metrics-service
    restart: always
    env_file:
      - ../services/.env.docker
    ports:
      - "8209:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.metrics-service.rule=Host(`metrics.localhost`)"
      - "traefik.http.services.metrics-service.loadbalancer.server.port=8000"
